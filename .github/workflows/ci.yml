# GitHub CI Workflow for Final Assessment
#
# This workflow handles the continuous integration pipeline for the Final Assessment,
# performing unit tests and simulating deployment to a test environment.
#
# Triggers:
# - When code is pushed to the main branch
# - When a pull request is created targeting the main branch
#
# Jobs:
# 1. unit-tests:
#    - Runs on Ubuntu latest
#    - Checks out the code
#    - Sets up Python 3.9
#    - Installs required dependencies
#    - Executes unit tests and generates JUnit XML report
#    - Uploads test results as an artifact
#
# 2. deploy:
#    - Runs on Ubuntu latest
#    - Depends on successful completion of unit-tests
#    - Simulates deployment to a test environment
#    - Currently contains a placeholder for the actual deployment command
#
# Note: The deployment step is currently a simulation. Replace the echo commands
# with actual deployment instructions when moving to production.
name: CI Pipeline for Final Assessment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          python -m pytest . --junitxml=unit-results.xml

      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: unit-results.xml

  deploy:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Simulate Deploy to Test Environment
        run: |
          echo "âœ… All tests passed. Deploying to test environment..."
          # Once we have a production environment we can deploy here